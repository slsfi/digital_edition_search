input {
    jdbc {
        tags => "tag"
        # Postgres jdbc connection string to our database, mydb
        jdbc_connection_string => "jdbc:postgresql://[IP OF DATABASE]:5432/digitaledition"
        # The user we wish to execute our statement as
        jdbc_user => ""
        jdbc_password=> ""
        # The path to our downloaded jdbc driver
        jdbc_driver_library => "/app/drivers/postgresql-42.2.5.jar"
        # The name of the driver class for Postgresql
        jdbc_driver_class => "org.postgresql.Driver"
        # our query
        statement => 'SELECT tag.id, tag.id as "tag_id", tag.project_id, tag.date_created, tag.date_modified, tag.name,
                        tag.type as "tag_type", tag.description, tag.legacy_id, tag.source, tag.deleted as "tag_deleted", tag.name_translation_id,
                        pub.published as "publication_published", pub.published as "published", pub.deleted as "publication_deleted",
                        ev_c.deleted as "ev_c_deleted", ev_o.deleted as "ev_o_deleted"
                        FROM event ev
                        JOIN event_connection ev_c ON ev_c.event_id = ev.id
                        JOIN event_occurrence ev_o ON ev_o.event_id = ev.id
                        JOIN publication pub ON pub.id = ev_o.publication_id
                        JOIN tag ON ev_c.tag_id = tag.id
                        ORDER BY tag_id ASC, tag_deleted DESC, publication_deleted DESC, publication_published ASC, ev_c_deleted DESC, ev_o_deleted DESC'
        schedule => "15 4 * * *"
    }
}

filter {
    if [name] {
        mutate {
            add_field => {
                "sort_by_name" => "%{name}"
            }
        }
        mutate {
            gsub => [
                # Remove special character
                "sort_by_name", "Ê½", ""
            ]
        }
        mutate {
            lowercase => [ "sort_by_name" ]
        }
    } else {
        mutate {
            add_field => {
                "sort_by_name" => ""
            }
        }
    }
}

## Add your filters / logstash plugins configuration here
output {
    if "tag" in [tags] {
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "tag"
            document_id => "%{[tag_id]}"
        }
    }
}
