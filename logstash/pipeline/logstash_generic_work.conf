input {
    jdbc {
        tags => "work"
        # Postgres jdbc connection string to our database, mydb
        jdbc_connection_string => "jdbc:postgresql://172.16.2.145:5432/digitaledition"
        # The user we wish to execute our statement as
        jdbc_user => ""
        jdbc_password=> ""
        # The path to our downloaded jdbc driver
        jdbc_driver_library => "/app/drivers/postgresql-42.2.5.jar"
        # The name of the driver class for Postgresql
        jdbc_driver_class => "org.postgresql.Driver"
        # our query
        statement => 'SELECT w_m.id as man_id,
                                    w_m.date_created,
                                    w_m.date_modified,
                                    w_m.deleted,
                                    w_m.title,
                                    w_m.type,
                                    w_m.description,
                                    w_m.source,
                                    w_m.linked_work_manifestation_id,
                                    w_m.work_id,
                                    w_m.work_manuscript_id,
                                    w_m.translated_by,
                                    w_m.journal,
                                    w_m.publication_location,
                                    w_m.publisher,
                                    w_m.published_year,
                                    w_m.volume,
                                    w_m.total_pages,
                                    (select legacy_id from work where id = w_m.work_id limit 1) as legacy_id,
                                    w_m.legacy_id AS manifestation_legacy_id,
                                    w_m."ISBN" as ISBN,
                                    w_r.project_id,
                                    w_r.reference
                                FROM work_manifestation w_m
                                JOIN work_reference w_r ON w_r.work_manifestation_id = w_m.id
                                WHERE w_r.deleted = 0 AND w_m.deleted = 0
                                ORDER BY w_m.title'
        schedule => "*/5 * * * *"
    }
}

filter 
{
    if [man_id] != "" {
                # publication_data
            jdbc_streaming {
                jdbc_connection_string => "jdbc:postgresql://172.16.2.145:5432/digitaledition"
                jdbc_user => ""
                jdbc_password => ""
                jdbc_driver_library => "/app/drivers/postgresql-42.2.5.jar"
                jdbc_driver_class => "org.postgresql.Driver"
                statement => "SELECT s.id,
                            s.date_created,
                            s.date_modified,
                            s.deleted,
                            s.type,
                            s.first_name,
                            s.last_name,
                            s.place_of_birth,
                            s.occupation,
                            s.preposition,
                            s.full_name,
                            s.description,
                            s.legacy_id,
                            s.date_born,
                            s.date_deceased,
                            s.project_id,
                            s.source,
                            s.alias,
                            s.previous_last_name
                           FROM event_connection ec
                             JOIN subject s ON s.id = ec.subject_id
                          WHERE ec.deleted = 0 AND s.deleted != 1 AND ec.work_manifestation_id = :idparam"
                parameters => { "idparam" => "man_id" }
                target => "author_data"
            }
    }
}


## Add your filters / logstash plugins configuration here
output {
    if "work" in [tags]{
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "work"
            document_id => "%{[man_id]}"
        }
    }
}
