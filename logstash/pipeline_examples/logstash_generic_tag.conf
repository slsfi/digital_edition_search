input {
    jdbc {
        tags => "tag"
        # Postgres jdbc connection string to our database, mydb
        jdbc_connection_string => "jdbc:postgresql://[IP OF DATABASE]:5432/digitaledition"
        # The user we wish to execute our statement as
        jdbc_user => "[DB USER]"
        jdbc_password=> "[DB USER PASSWORD]"
        # The path to our downloaded jdbc driver
        jdbc_driver_library => "/app/drivers/postgresql-42.2.5.jar"
        # The name of the driver class for Postgresql
        jdbc_driver_class => "org.postgresql.Driver"
        # our query
        statement => 'SELECT DISTINCT ON (t.id) t.id, t.id as "tag_id", t.legacy_id, t.name,
                        t.name as "sort_by_name", t.description, t.type as "tag_type", t.project_id,
                        t.source, t.name_translation_id, t.deleted as "tag_deleted",
                        pub.published as "publication_published", pub.published as "published",
                        pub.deleted as "publication_deleted",
                        ev.deleted as "ev_deleted",
                        ev_o.id as "occ_id", ev_o.publication_id, ev_o.publication_version_id,
                        ev_o.publication_manuscript_id, ev_o.publication_facsimile_id,
                        ev_o.publication_comment_id, ev_o.publication_facsimile_page,
                        ev_o.deleted as "ev_o_deleted",
                        ev_c.deleted as "ev_c_deleted"
                      FROM tag t
                      JOIN event_connection ev_c ON ev_c.tag_id = t.id
                      JOIN event ev ON ev.id = ev_c.event_id
                      JOIN event_occurrence ev_o ON ev_o.event_id = ev.id
                      JOIN publication pub ON pub.id = ev_o.publication_id
                      ORDER BY t.id ASC, t.deleted ASC, pub.deleted ASC, pub.published DESC,
                        ev.deleted ASC, ev_c.deleted ASC, ev_o.deleted ASC'
        schedule => "15 4 * * *"
    }
}

filter {
    mutate {
        gsub => [
            "sort_by_name", "Ê½", ""
        ]
        lowercase => [ "sort_by_name" ]
    }
}

output {
    if "tag" in [tags] {
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "tag"
            document_id => "%{[tag_id]}"
        }
    }
}
